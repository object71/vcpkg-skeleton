diff --git a/cmake/OpenCVFindLibsGrfmt.cmake b/cmake/OpenCVFindLibsGrfmt.cmake
index 0beaf19..3ba1ebd 100644
--- a/cmake/OpenCVFindLibsGrfmt.cmake
+++ b/cmake/OpenCVFindLibsGrfmt.cmake
@@ -6,7 +6,7 @@
 if(BUILD_ZLIB)
   ocv_clear_vars(ZLIB_FOUND)
 else()
-  find_package(ZLIB "${MIN_VER_ZLIB}")
+  find_package(ZLIB "${MIN_VER_ZLIB}" REQUIRED)
   if(ZLIB_FOUND AND ANDROID)
     if(ZLIB_LIBRARIES MATCHES "/usr/(lib|lib32|lib64)/libz.so$")
       set(ZLIB_LIBRARIES z)
@@ -30,7 +30,7 @@ if(WITH_JPEG)
   if(BUILD_JPEG)
     ocv_clear_vars(JPEG_FOUND)
   else()
-    include(FindJPEG)
+    find_package(JPEG REQUIRED)
   endif()
 
   if(NOT JPEG_FOUND)
@@ -74,7 +74,7 @@ if(WITH_TIFF)
   if(BUILD_TIFF)
     ocv_clear_vars(TIFF_FOUND)
   else()
-    include(FindTIFF)
+    find_package(TIFF REQUIRED)
     if(TIFF_FOUND)
       ocv_parse_header("${TIFF_INCLUDE_DIR}/tiff.h" TIFF_VERSION_LINES TIFF_VERSION_CLASSIC TIFF_VERSION_BIG TIFF_VERSION TIFF_BIGTIFF_VERSION)
     endif()
@@ -117,7 +117,7 @@ if(WITH_WEBP)
   if(BUILD_WEBP)
     ocv_clear_vars(WEBP_FOUND WEBP_LIBRARY WEBP_LIBRARIES WEBP_INCLUDE_DIR)
   else()
-    include(cmake/OpenCVFindWebP.cmake)
+    find_package(WebP REQUIRED)
     if(WEBP_FOUND)
       set(HAVE_WEBP 1)
     endif()
@@ -173,7 +173,7 @@ if(WITH_JASPER AND NOT HAVE_OPENJPEG)
   if(BUILD_JASPER)
     ocv_clear_vars(JASPER_FOUND)
   else()
-    include(FindJasper)
+    find_package(Jasper REQUIRED)
   endif()
 
   if(NOT JASPER_FOUND)
@@ -197,7 +197,7 @@ if(WITH_PNG)
   if(BUILD_PNG)
     ocv_clear_vars(PNG_FOUND)
   else()
-    include(FindPNG)
+    find_package(PNG REQUIRED)
     if(PNG_FOUND)
       include(CheckIncludeFile)
       check_include_file("${PNG_PNG_INCLUDE_DIR}/libpng/png.h" HAVE_LIBPNG_PNG_H)
@@ -228,7 +228,7 @@ endif()
 if(WITH_OPENEXR)
   ocv_clear_vars(HAVE_OPENEXR)
   if(NOT BUILD_OPENEXR)
-    include("${OpenCV_SOURCE_DIR}/cmake/OpenCVFindOpenEXR.cmake")
+    find_package(OpenEXR REQUIRED)
   endif()
 
   if(OPENEXR_FOUND)
@@ -246,7 +246,7 @@ endif()
 
 # --- GDAL (optional) ---
 if(WITH_GDAL)
-    find_package(GDAL QUIET)
+  find_package(GDAL REQUIRED)
 
     if(NOT GDAL_FOUND)
         set(HAVE_GDAL NO)
@@ -258,7 +258,7 @@ if(WITH_GDAL)
 endif()
 
 if (WITH_GDCM)
-  find_package(GDCM QUIET)
+  find_package(GDCM REQUIRED)
   if(NOT GDCM_FOUND)
     set(HAVE_GDCM NO)
     ocv_clear_vars(GDCM_VERSION GDCM_LIBRARIES)
diff --git a/cmake/OpenCVFindLibsPerf.cmake b/cmake/OpenCVFindLibsPerf.cmake
index b9b1a95..596c152 100644
--- a/cmake/OpenCVFindLibsPerf.cmake
+++ b/cmake/OpenCVFindLibsPerf.cmake
@@ -51,14 +51,9 @@ endif(WITH_CUDA)
 
 # --- Eigen ---
 if(WITH_EIGEN AND NOT HAVE_EIGEN)
-  find_package(Eigen3 QUIET)
+  find_package(Eigen3 REQUIRED)
 
   if(Eigen3_FOUND)
-    if(TARGET Eigen3::Eigen)
-      # Use Eigen3 imported target if possible
-      list(APPEND OPENCV_LINKER_LIBS Eigen3::Eigen)
-      set(HAVE_EIGEN 1)
-    else()
       if(DEFINED EIGEN3_INCLUDE_DIRS)
         set(EIGEN_INCLUDE_PATH ${EIGEN3_INCLUDE_DIRS})
         set(HAVE_EIGEN 1)
@@ -66,7 +61,6 @@ if(WITH_EIGEN AND NOT HAVE_EIGEN)
         set(EIGEN_INCLUDE_PATH ${EIGEN3_INCLUDE_DIR})
         set(HAVE_EIGEN 1)
       endif()
-    endif()
     if(HAVE_EIGEN)
       if(DEFINED EIGEN3_WORLD_VERSION)  # CMake module
         set(EIGEN_WORLD_VERSION ${EIGEN3_WORLD_VERSION})
@@ -77,6 +71,7 @@ if(WITH_EIGEN AND NOT HAVE_EIGEN)
         set(EIGEN_MAJOR_VERSION ${EIGEN3_VERSION_MINOR})
         set(EIGEN_MINOR_VERSION ${EIGEN3_VERSION_PATCH})
       endif()
+      ocv_include_directories(${EIGEN_INCLUDE_PATH})
     endif()
   endif()
 
